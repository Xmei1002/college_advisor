"""增加知识库表

Revision ID: 63c60140474a
Revises: 6d08a02bb2be
Create Date: 2025-05-08 06:38:03.855589

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '63c60140474a'
down_revision = '6d08a02bb2be'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('knowledge_directories',
    sa.Column('title', sa.String(length=100), nullable=False, comment='目录标题'),
    sa.Column('level', sa.Integer(), nullable=True, comment='目录层级：1=顶级目录，2=子目录'),
    sa.Column('parent_id', sa.Integer(), nullable=True, comment='父目录ID'),
    sa.Column('has_direct_content', sa.Boolean(), nullable=True, comment='是否有直接内容'),
    sa.Column('sort_order', sa.Integer(), nullable=True, comment='排序顺序'),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['knowledge_directories.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('knowledge_items',
    sa.Column('title', sa.String(length=200), nullable=False, comment='条目标题'),
    sa.Column('content', sa.Text(), nullable=True, comment='纯文本内容'),
    sa.Column('html_content', sa.Text(), nullable=True, comment='HTML格式内容'),
    sa.Column('directory_id', sa.Integer(), nullable=False, comment='目录ID'),
    sa.Column('is_directory_content', sa.Boolean(), nullable=True, comment='是否为目录直接内容'),
    sa.Column('sort_order', sa.Integer(), nullable=True, comment='排序顺序'),
    sa.Column('views', sa.Integer(), nullable=True, comment='浏览次数'),
    sa.Column('tags', sa.String(length=500), nullable=True, comment='标签，逗号分隔'),
    sa.Column('status', sa.SmallInteger(), nullable=True, comment='状态: 1-正常, 0-禁用'),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['directory_id'], ['knowledge_directories.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # op.drop_table('zwh_xgk_jihua_2025')
    # with op.batch_alter_table('career_preferences', schema=None) as batch_op:
    #     batch_op.drop_index('student_id')

    op.drop_table('career_preferences')
    with op.batch_alter_table('academic_records', schema=None) as batch_op:
        batch_op.drop_constraint('academic_records_ibfk_1', type_='foreignkey')
        batch_op.create_foreign_key(None, 'students', ['student_id'], ['id'])

    with op.batch_alter_table('college_preferences', schema=None) as batch_op:
        batch_op.drop_constraint('college_preferences_ibfk_1', type_='foreignkey')
        batch_op.create_foreign_key(None, 'students', ['student_id'], ['id'])

    with op.batch_alter_table('messages', schema=None) as batch_op:
        batch_op.drop_constraint('messages_ibfk_1', type_='foreignkey')
        batch_op.create_foreign_key(None, 'conversations', ['conversation_id'], ['id'], ondelete='CASCADE')

    with op.batch_alter_table('planner_info', schema=None) as batch_op:
        batch_op.drop_constraint('planner_info_ibfk_1', type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'])

    with op.batch_alter_table('student_volunteer_plans', schema=None) as batch_op:
        batch_op.drop_constraint('student_volunteer_plans_ibfk_2', type_='foreignkey')
        batch_op.drop_constraint('student_volunteer_plans_ibfk_1', type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['planner_id'], ['id'])
        batch_op.create_foreign_key(None, 'students', ['student_id'], ['id'])

    with op.batch_alter_table('students', schema=None) as batch_op:
        batch_op.drop_constraint('students_ibfk_1', type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'])

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_constraint('users_ibfk_2', type_='foreignkey')
        batch_op.drop_constraint('users_ibfk_1', type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['planner_id'], ['id'])
        batch_op.create_foreign_key(None, 'institutions', ['institution_id'], ['id'])

    with op.batch_alter_table('volunteer_category_analyses', schema=None) as batch_op:
        batch_op.drop_constraint('volunteer_category_analyses_ibfk_1', type_='foreignkey')
        batch_op.create_foreign_key(None, 'student_volunteer_plans', ['plan_id'], ['id'], ondelete='CASCADE')

    with op.batch_alter_table('volunteer_colleges', schema=None) as batch_op:
        batch_op.drop_constraint('volunteer_colleges_ibfk_1', type_='foreignkey')
        batch_op.create_foreign_key(None, 'student_volunteer_plans', ['plan_id'], ['id'], ondelete='CASCADE')

    with op.batch_alter_table('volunteer_specialties', schema=None) as batch_op:
        batch_op.drop_constraint('volunteer_specialties_ibfk_1', type_='foreignkey')
        batch_op.create_foreign_key(None, 'volunteer_colleges', ['volunteer_college_id'], ['id'], ondelete='CASCADE')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('volunteer_specialties', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('volunteer_specialties_ibfk_1', 'volunteer_colleges', ['volunteer_college_id'], ['id'], onupdate='RESTRICT', ondelete='CASCADE')

    with op.batch_alter_table('volunteer_colleges', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('volunteer_colleges_ibfk_1', 'student_volunteer_plans', ['plan_id'], ['id'], onupdate='RESTRICT', ondelete='CASCADE')

    with op.batch_alter_table('volunteer_category_analyses', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('volunteer_category_analyses_ibfk_1', 'student_volunteer_plans', ['plan_id'], ['id'], onupdate='RESTRICT', ondelete='CASCADE')

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('users_ibfk_1', 'users', ['planner_id'], ['id'], onupdate='RESTRICT', ondelete='RESTRICT')
        batch_op.create_foreign_key('users_ibfk_2', 'institutions', ['institution_id'], ['id'], onupdate='RESTRICT', ondelete='RESTRICT')

    with op.batch_alter_table('students', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('students_ibfk_1', 'users', ['user_id'], ['id'], onupdate='RESTRICT', ondelete='RESTRICT')

    with op.batch_alter_table('student_volunteer_plans', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('student_volunteer_plans_ibfk_1', 'users', ['planner_id'], ['id'], onupdate='RESTRICT', ondelete='RESTRICT')
        batch_op.create_foreign_key('student_volunteer_plans_ibfk_2', 'students', ['student_id'], ['id'], onupdate='RESTRICT', ondelete='RESTRICT')

    with op.batch_alter_table('planner_info', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('planner_info_ibfk_1', 'users', ['user_id'], ['id'], onupdate='RESTRICT', ondelete='RESTRICT')

    with op.batch_alter_table('messages', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('messages_ibfk_1', 'conversations', ['conversation_id'], ['id'], onupdate='RESTRICT', ondelete='CASCADE')

    with op.batch_alter_table('college_preferences', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('college_preferences_ibfk_1', 'students', ['student_id'], ['id'], onupdate='RESTRICT', ondelete='RESTRICT')

    with op.batch_alter_table('academic_records', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('academic_records_ibfk_1', 'students', ['student_id'], ['id'], onupdate='RESTRICT', ondelete='RESTRICT')

    op.create_table('career_preferences',
    sa.Column('student_id', mysql.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('career_direction', mysql.VARCHAR(charset='utf8mb4', collation='utf8mb4_unicode_ci', length=50), nullable=True, comment='就业发展方向，如金融,教师,医生等'),
    sa.Column('academic_preference', mysql.VARCHAR(charset='utf8mb4', collation='utf8mb4_unicode_ci', length=100), nullable=True, comment='学术学位偏好，如985,211等'),
    sa.Column('civil_service_preference', mysql.VARCHAR(charset='utf8mb4', collation='utf8mb4_unicode_ci', length=100), nullable=True, comment='公务员意向'),
    sa.Column('employment_location', mysql.VARCHAR(charset='utf8mb4', collation='utf8mb4_unicode_ci', length=100), nullable=True, comment='就业地区'),
    sa.Column('income_expectation', mysql.VARCHAR(charset='utf8mb4', collation='utf8mb4_unicode_ci', length=100), nullable=True, comment='职业稳定性与收入平衡'),
    sa.Column('work_stability', mysql.VARCHAR(charset='utf8mb4', collation='utf8mb4_unicode_ci', length=100), nullable=True, comment='工作稳定性'),
    sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('created_at', mysql.DATETIME(), nullable=True),
    sa.Column('updated_at', mysql.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['student_id'], ['students.id'], name='career_preferences_ibfk_1', onupdate='RESTRICT', ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_unicode_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    with op.batch_alter_table('career_preferences', schema=None) as batch_op:
        batch_op.create_index('student_id', ['student_id'], unique=True)

    op.create_table('zwh_xgk_jihua_2025',
    sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('json_data', mysql.TEXT(charset='utf8mb4', collation='utf8mb4_general_ci'), nullable=True),
    sa.Column('fsx_id', mysql.INTEGER(), server_default=sa.text("'0'"), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_general_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.drop_table('knowledge_items')
    op.drop_table('knowledge_directories')
    # ### end Alembic commands ###
